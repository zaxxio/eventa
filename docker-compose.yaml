version: '3.9'
services:
  # Zookeeper for advanced routing and leader selection
  zookeeper:
    container_name: zookeeper
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    networks:
      - cloudNetwork
  # Kafka Broker for Message Dispatching
  kafka-1:
    container_name: kafka-1
    restart: always
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - cloudNetwork
  # Kafka UI
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    depends_on:
      - zookeeper
      - kafka-1
    environment:
      KAFKA_CLUSTERS_0_NAME: Development
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka-1:19092'
      DYNAMIC_CONFIG_ENABLED: 'true'
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: pass
    networks:
      - cloudNetwork
  # MongoDB
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    networks:
      - cloudNetwork

  # Mongo Express
  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    restart: always
    ports:
      - "8086:8081"
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=username
      - ME_CONFIG_BASICAUTH_PASSWORD=password
      - ME_CONFIG_MONGODB_ADMINUSERNAME=username
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - cloudNetwork

  # Minio
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - cloudNetwork

networks:
  cloudNetwork:
    name: cloudNetwork
    driver: bridge

volumes:
  teamcity_server_data:
  teamcity_server_logs:
  teamcity_agent_conf:
  mongo-data:
  minio_data: